!function(e){var t={};function o(s){if(t[s])return t[s].exports;var r=t[s]={i:s,l:!1,exports:{}};return e[s].call(r.exports,r,r.exports,o),r.l=!0,r.exports}o.m=e,o.c=t,o.d=function(e,t,s){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(o.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)o.d(s,r,function(t){return e[t]}.bind(null,r));return s},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t,o){const s=o(1),r=o(2),a=o(3),n=o(4),{promisify:i}=o(12),c=i(s.writeFile),l=i(s.unlink),u="./tests/testutils.js",d=a.bgRed,p=a.green,g=(a.bgCyan,a.bgRed),f=a.bgGreen;a.bgBlue,a.bgGreen,a.green;n.getConfig().then(async e=>{n.setDebug(e.debug);try{let t=await n.checkTestVersion(e.info.githubURL,"package.json");if(2===process.argv.length&&"*"===t?console.log(p("No se ha podido comprobar si tienes la última versión de los test, no hay conexión a Internet o el repositorio remoto ha devuelto un error al intentar acceder. Se empleará la versión "+e.version)):t!==e.version&&(console.log(d("No tienes la última versión de los TESTs o no tienes conexión de red. Debes tener conexión de red y además tener la última versión de los test, para ello actualiza el repositorio.")),console.log(p("Si has utilizado git para bajártelo tan solo tendrás que hacer git pull, si no has usado git vuelve a bajarte el repo completo y sustituye la carpeta tests y el fichero package.json por la última versión."))),process.argv.length>2&&t!==e.version&&process.exit(0),!e.disableHashCheck){let t=await n.getHashMultipleFiles(["./tests/checks.js",u]);const o=await n.getGitHubFile(e.info.githubURL,"./tests/checks.js"),s=await n.getGitHubFile(e.info.githubURL,u);t!==n.getHashMultipleStrings([o,s])?(console.log(d("WARNING: se ha detectado que el fichero de tests está modificado, esto dará problemas al subir la nota al servidor.")),console.log(d("Ejecute la orden 'git checkout tests/*' para volver a obtener la versión oficial de los tests."))):n.debug("Ficheros de tests sin modificar")}const o=e.info.serverUrl+"api/courses/"+e.info.courseId+"/assignments/"+e.info.assignmentId;await n.createFolder("./data");let s=await n.getEmailAndToken("./user.json"),a=await n.execTests("./tests/checks.js");a.score=parseFloat(a.score.toPrecision(12)),a.score_total=parseFloat(a.score_total.toPrecision(12));let i=await n.saveHistoryRecord(a,e.version,"./data/his.enc");if(10===a.score?console.log(f(`Resultado Final: ${a.score}/${a.score_total}\n\n`)):console.log(g(`Resultado Final: ${a.score}/${a.score_total}\n\n`)),process.argv.length>2&&"upload"===process.argv[2]){await n.askForDataCorrect(s)||(await n.checkFileExists(r.resolve(process.cwd(),"./user.json"))&&await l(r.resolve(process.cwd(),"./user.json")),s=await n.getEmailAndToken("./user.json")),await n.askForConsent()||(console.log(d("Asegurese de haber hecho usted la práctica que va a subir al servidor.")),process.exit(0)),s.score=a.score,s.score_total=a.score_total,s.test_version=e.version,s.history=i,s.hash_files=await n.getHashMultipleFiles(["./tests/checks.js",u]);let t=JSON.parse(JSON.stringify(s));s.signature=n.getSignature(t),n.debug("RESULTS: ",s);let p=n.en(JSON.stringify(s,null,4),"pubkey.pem");await c(r.resolve(process.cwd(),"./data/res.enc"),p),await n.compress("./data/assignment.zip"),await n.sendFile(o,"./data/assignment.zip","./data/his.enc"),n.debug("¡FIN!")}else console.log(g("Este resultado es informativo. Debe ejecutar el autocorector con la opción -u o --upload para subir su nota y que quede registrada.")),console.log(f("Recuerde que puede subir su nota varias veces, se quedará con la última nota que haya subido cuando se cierre la entrega de la práctica."))}catch(e){console.log("ERROR, CERRAMOS TODO"),console.log(e),console.log(d(e))}}).catch(e=>{n.debug(e),console.log(d(e))})},function(e,t){e.exports=require("fs")},function(e,t){e.exports=require("path")},function(e,t){e.exports=require("chalk")},function(e,t,o){const s=o(1),r=o(5),a=(o(6),o(7)),n=o(2),i=o(3),c=o(8),l=o(9),u=o(10),d=o(11),p=o(12),g={},f=i.bgRed,b=i.green,h=i.bgCyan,m=i.yellow.inverse,y=(i.bgRed,i.bgGreen),v=i.green;let w=!1;const{promisify:x}=o(12),k=x(s.writeFile),E=x(s.readFile),O=x(s.access),F=x(s.mkdir),S=x(s.stat);g.setDebug=e=>{w=e},g.debug=(...e)=>{w&&console.log(...e)},g.getConfig=async()=>{if(g.debug("getConfig"),!await g.checkFileExists("package.json"))return Promise.reject("Esto no parece un repositorio Git, no tiene package.json. No se puede usar el corrector automático.");try{let e=JSON.parse(await E(n.resolve(process.cwd(),"package.json")));return Promise.resolve(e)}catch(e){return g.debug("Error procesando el package.json",e),Promise.reject(e)}},g.checkFileExists=e=>(g.debug("checkFileExists",e),new Promise(async(t,o)=>{try{await O(e,s.F_OK),t(!0)}catch(e){t(!1)}})),g.createFolder=async e=>{await g.checkFileExists(n.resolve(process.cwd(),e))||(g.debug("Data folder does not exist, let's create it"),await F(e))},g.delay=async e=>new Promise(t=>setTimeout(t,e)),g.getEmailAndToken=async e=>{g.debug("getEmailAndToken",e);let t={};if(await g.checkFileExists(n.resolve(process.cwd(),e)))return t=JSON.parse(await E(n.resolve(process.cwd(),e))),t.email.endsWith("upm.es")?Promise.resolve(t):Promise.reject("FILE WITH INFO USER DOES NOT CONTAIN A VALID EMAIL. It should end with upm.es");var o=a.createInterface({input:process.stdin,output:process.stdout});return new Promise((function(r,a){console.log(b("A continuación se pedirán sus datos (email y token) para cuando se suban los resultados finales a Moodle")),o.question(b("Escriba su email de alumno UPM por favor: "),(function(i){t.email=i,o.question(b("Escriba su token de Moodle UPM por favor: "),i=>{t.token=i,t.email.endsWith("upm.es")?o.question(h("¿Desea almacenar estos datos en el fichero user.json para evitar tener que introducirlos de nuevo en el futuro? (y/N): "),(async function(i){if("y"===i||"yes"===i){try{s.writeFileSync(n.resolve(process.cwd(),e),JSON.stringify(t,null,4)),g.debug("Fichero user.json creado")}catch(e){console.log(f(e)),a("NO SE HA PODIDO CREAR EL FICHERO")}o.close(),r(t)}else o.close(),r(t)})):(o.close(),a("LA INFORMACIÓN DE USUARIO NO CONTIENE UN EMAIL VALIDO. Debería acabar por upm.es"))})}))}))},g.getHashMultipleFiles=async e=>{g.debug("getHashMultipleFiles",e);let t="";for(var o=0;o<e.length;o++)t+=await E(n.resolve(process.cwd(),e[o]),"utf8");return t=t.replace(/\r\n/g,"\n"),r.createHash("md5").update(t).digest("hex")},g.getHashMultipleStrings=e=>{let t="";for(let o=0;o<e.length;o++)t+=e[o];return r.createHash("md5").update(t).digest("hex")},g.getSignature=e=>{g.debug("getSignature");return r.createHmac("sha512","new JSON({user_info})").update(JSON.stringify(e)).digest("hex")},g.askForDataCorrect=e=>{g.debug("askForDataCorrect",e);var t=a.createInterface({input:process.stdin,output:process.stdout});return new Promise((function(o,s){console.log(b(`Los datos con los que se va a firmar la práctica son, email: ${e.email}, token: ${e.token}`)),t.question(h("¿Son correctos? (y/N): "),(function(e){o("y"===e||"yes"===e,s),t.close()}))}))},g.askForConsent=e=>{g.debug("askForConsent",e);var t=a.createInterface({input:process.stdin,output:process.stdout});return new Promise((function(e,o){console.log(b("El contenido de la práctica, así como los test que se le pasan van a ser firmados.")),console.log(b("Es importante que sepa que se van a enviar al servidor y en él se validará la firma y la autenticidad, así como se pasará un anticopia.")),t.question(h("¿Confirma que ha realizado usted mismo la práctica y desea enviarla al servidor para registrar la nota? (y/N):"),s=>{e("y"===s||"yes"===s,o),t.close()})}))},g.compress=async e=>{g.debug("compress",e);const t=c("zip",{zlib:{level:9}}),o=s.createWriteStream(n.resolve(process.cwd(),e));return new Promise((e,s)=>{t.glob("*",{ignore:["node_modules","tests","bin","README.md","LICENSE","*.zip"]}),t.glob("data/res.enc"),t.on("error",e=>s(e)),t.pipe(o),o.on("close",()=>{e()}),t.finalize()})},g.checkTestVersion=async(e,t)=>{g.debug("checkTestVersion",e,t);const o=new l;let s,r;return[s,r]=e.split("/"),o.repos.getContents({owner:s,repo:r,path:t}).then(e=>{const t=Buffer.from(e.data.content,"base64").toString();return JSON.parse(t).version}).catch(e=>(g.debug(e),"*"))},g.getGitHubFile=(e,t)=>new Promise((o,s)=>{const r=new l;let a,n;[a,n]=e.split("/"),t.startsWith("./")&&(t=t.substring(2)),r.repos.getContents({owner:a,repo:n,path:t}).then(e=>{const t=Buffer.from(e.data.content,"base64").toString();o(t)}).catch(e=>{s(e)})}),g.encryptBufferWithRsaPublicKey=async(e,t)=>{g.debug("encryptBufferWithRsaPublicKey");var o=await E(n.resolve(process.cwd(),t),"utf8"),s=Buffer.from(e);return r.publicEncrypt({key:o,padding:r.constants.RSA_NO_PADDING},s).toString("base64")},g.en=(e,t)=>{g.debug("en");let o=r.createHash("sha256").update(t).digest("base64").substr(0,32);const s=r.randomBytes(16),a=r.createCipheriv("aes-256-ctr",o,s);let n=Buffer.from(e);return Buffer.concat([s,a.update(n),a.final()]).toString("hex")},g.de=(e,t)=>{g.debug("de");let o=Buffer.from(e,"hex");const s=o.slice(0,16);o=o.slice(16);let a=r.createHash("sha256").update(t).digest("base64").substr(0,32);const n=r.createDecipheriv("aes-256-ctr",a,s);return Buffer.concat([n.update(o),n.final()]).toString()},g.sendFile=async(e,t,o)=>{g.debug("sendFile",e,t),console.log("Enviando práctica al servidor...");const s={submission:{file:n.resolve(process.cwd(),t),filename:"submission.zip",content_type:"application/zip"}};try{const t=await u("post",e,s,{multipart:!0,accept:"application/json"});200===t.statusCode?(console.log(b(t.body||"Ok")),await g.cleanHistoryRecords(o)):(console.log(f("ERROR")),console.error(t.body||"Error"))}catch(e){console.error(e||"Error")}},g.execTests=e=>(g.debug("execTests",e),new Promise((t,s)=>{global.should=o(13).should(),global.exec=p.promisify(o(14).exec),global.Browser=o(15);let r={score:0,score_total:0};g.debug("Call new Mocha"),new d({timeout:6e4,reporter:function(){}}).addFile(n.resolve(process.cwd(),e)).run().on("suite",(function(e){console.log(m(e.title)+"\n")})).on("test",(function(e){console.log(y(`Test: ${e.title}`))})).on("pass",(function(e){r.score+=e.ctx.score,r.score_total+=e.ctx.score,console.log("\t"+v("Puntuación: ")+`${e.ctx.score}/${e.ctx.score}\n\t`+v("Observaciones: ")+`${e.ctx.msg_ok}`+"\n")})).on("fail",(function(e,t){e.title.indexOf('"after all" hook')<0&&e.title.indexOf('"before all" hook')<0?(r.score_total+=e.ctx.score,console.log("\t"+f("Puntuación: ")+`0/${e.ctx.score}\n\t`+f("Observaciones:")+`${e.ctx.msg_err}`+"\n")):console.error(f("Error Mocha: ")+t)})).on("end",(function(){t(r)}))})),g.initHistory=async()=>{g.debug("initHistory");let e=[],t={};const o=await S("package.json");return t.started=!0,t.datetime=o.mtime,e.push(t),e},g.saveHistoryRecord=async(e,t,o)=>{let s;if(g.debug("saveHistoryRecord",e,t),await g.checkFileExists(n.resolve(process.cwd(),o)))try{let e=await E(n.resolve(process.cwd(),o),"utf8"),t=g.de(e,"pubkey.pem");s=JSON.parse(t)}catch(e){console.log("ERROR Recuperable: ",f(e)),g.debug(e),s=await g.initHistory()}else s=await g.initHistory();let r={started:!1,datetime:new Date,score:e.score,score_total:e.score_total,version:t};s.push(r);let a=g.en(JSON.stringify(s,null,4),"pubkey.pem");return k(n.resolve(process.cwd(),o),a,"utf8").then(e=>Promise.resolve(s)).catch(e=>(console.log(f(e)),Promise.reject(e)))},g.cleanHistoryRecords=async e=>{if(g.debug("cleanHistoryRecords"),await g.checkFileExists(n.resolve(process.cwd(),e))){let t=await E(n.resolve(process.cwd(),e),"utf8"),o=g.de(t,"pubkey.pem"),s=[JSON.parse(o)[0]],r=g.en(JSON.stringify(s,null,4),"pubkey.pem");return k(n.resolve(process.cwd(),e),r,"utf8")}},e.exports=g},function(e,t){e.exports=require("crypto")},function(e,t){e.exports=require("object-hash")},function(e,t){e.exports=require("readline")},function(e,t){e.exports=require("archiver")},function(e,t){e.exports=require("@octokit/rest")},function(e,t){e.exports=require("needle")},function(e,t){e.exports=require("mocha")},function(e,t){e.exports=require("util")},function(e,t){e.exports=require("chai")},function(e,t){e.exports=require("child_process")},function(e,t){e.exports=require("zombie")}]);
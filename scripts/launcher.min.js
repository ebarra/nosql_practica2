!function(e){var o={};function t(s){if(o[s])return o[s].exports;var r=o[s]={i:s,l:!1,exports:{}};return e[s].call(r.exports,r,r.exports,t),r.l=!0,r.exports}t.m=e,t.c=o,t.d=function(e,o,s){t.o(e,o)||Object.defineProperty(e,o,{enumerable:!0,get:s})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,o){if(1&o&&(e=t(e)),8&o)return e;if(4&o&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(t.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&o&&"string"!=typeof e)for(var r in e)t.d(s,r,function(o){return e[o]}.bind(null,r));return s},t.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(o,"a",o),o},t.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},t.p="",t(t.s=0)}([function(e,o,t){const s=t(1),r=t(2),n=t(3),a=t(4),{promisify:i}=t(12),c=i(s.writeFile),l=n.bgRed,u=n.green,d=(n.bgCyan,n.bgRed),p=n.bgGreen;n.bgBlue,n.bgGreen,n.green;a.getConfig().then(async e=>{a.setDebug(e.debug);try{let o=await a.checkTestVersion(e.info.githubURL,"package.json");2===process.argv.length&&"*"===o?console.log(u("No se ha podido comprobar si tienes la última versión de los test, no hay conexión a Internet. Se empleará la versión "+e.version)):o!==e.version&&(console.log(l("No tienes la última versión de los TESTs. Debes actualizar el repositorio.")),console.log(u("Si has utilizado git para bajártelo tan solo tendrás que hacer git pull, si no has usado git vuelve a bajarte el repo completo y sustituye la carpeta tests, carpeta scripts y fichero package.json por la última versión.")),process.exit(0));const t=e.info.serverUrl+"api/courses/"+e.info.courseId+"/assignments/"+e.info.assignmentId;await a.createFolder("./data");let s=await a.getEmailAndToken("./user.json"),n=await a.execTests("./tests/checks.js");n.score=parseFloat(n.score.toPrecision(12)),n.score_total=parseFloat(n.score_total.toPrecision(12));let i=await a.saveHistoryRecord(n,e.version,"./data/his.enc");if(10===n.score?console.log(p(`Resultado Final: ${n.score}/${n.score_total}\n\n`)):console.log(d(`Resultado Final: ${n.score}/${n.score_total}\n\n`)),process.argv.length>2&&"upload"===process.argv[2]){await a.askForConsent(s)||(console.log(l("Rellene correctamente sus datos y asegurese de haber hecho usted la práctica que va a subir al servidor.")),process.exit(0)),s.score=n.score,s.score_total=n.score_total,s.test_version=e.version,s.history=i,s.hash_files=await a.getHashMultipleFiles(["./tests/checks.js","./tests/testutils.js"]);let o=JSON.parse(JSON.stringify(s));s.signature=a.getSignature(o),a.debug("RESULTS: ",s);let u=a.en(JSON.stringify(s,null,4),"pubkey.pem");await c(r.resolve(process.cwd(),"./data/res.enc"),u),await a.compress("./data/assignment.zip"),await a.sendFile(t,"./data/assignment.zip","./data/his.enc"),a.debug("¡FIN!")}}catch(e){console.log("ERROR, CERRAMOS TODO"),console.log(e),console.log(l(e))}}).catch(e=>{a.debug(e),console.log(l(e))})},function(e,o){e.exports=require("fs")},function(e,o){e.exports=require("path")},function(e,o){e.exports=require("chalk")},function(e,o,t){const s=t(1),r=t(5),n=(t(6),t(7)),a=t(2),i=t(3),c=t(8),l=t(9),u=t(10),d=t(11),p=t(12),g={},f=i.bgRed,b=i.green,m=i.bgCyan,y=i.yellow.inverse,h=(i.bgRed,i.bgGreen),v=i.green;let w=!1;const{promisify:x}=t(12),O=x(s.writeFile),E=x(s.readFile),k=x(s.access),S=x(s.mkdir),R=x(s.stat);g.setDebug=e=>{w=e},g.debug=(...e)=>{w&&console.log(...e)},g.getConfig=async()=>{if(g.debug("getConfig"),!await g.checkFileExists("package.json"))return Promise.reject("Esto no parece un repositorio Git, no tiene package.json. No se puede usar el corrector automático.");try{let e=JSON.parse(await E(a.resolve(process.cwd(),"package.json")));return Promise.resolve(e)}catch(e){return g.debug("Error procesando el package.json",e),Promise.reject(e)}},g.checkFileExists=e=>(g.debug("checkFileExists",e),new Promise(async(o,t)=>{try{await k(e,s.F_OK),o(!0)}catch(e){o(!1)}})),g.createFolder=async e=>{await g.checkFileExists(a.resolve(process.cwd(),e))||(g.debug("Data folder does not exist, let's create it"),await S(e))},g.delay=async e=>new Promise(o=>setTimeout(o,e)),g.getEmailAndToken=async e=>{g.debug("getEmailAndToken",e);let o={};if(await g.checkFileExists(a.resolve(process.cwd(),e)))return o=JSON.parse(await E(a.resolve(process.cwd(),e))),o.email.endsWith("upm.es")?Promise.resolve(o):Promise.reject("FILE WITH INFO USER DOES NOT CONTAIN A VALID EMAIL. It should end with upm.es");var t=n.createInterface({input:process.stdin,output:process.stdout});return new Promise((function(r,n){console.log(b("A continuación se pedirán sus datos (email y token) para cuando se suban los resultados finales a Moodle")),t.question(b("Escriba su email de alumno UPM por favor: "),(function(i){o.email=i,t.question(b("Escriba su token de Moodle UPM por favor: "),i=>{o.token=i,o.email.endsWith("upm.es")?t.question(m("¿Desea almacenar estos datos en el fichero user.json para evitar tener que introducirlos de nuevo en el futuro? (y/N): "),(async function(i){if("y"===i||"yes"===i){try{s.writeFileSync(a.resolve(process.cwd(),e),JSON.stringify(o,null,4)),g.debug("Fichero user.json creado")}catch(e){console.log(f(e)),n("NO SE HA PODIDO CREAR EL FICHERO")}t.close(),r(o)}else t.close(),r(o)})):(t.close(),n("LA INFORMACIÓN DE USUARIO NO CONTIENE UN EMAIL VALIDO. Debería acabar por upm.es"))})}))}))},g.getHashFile=e=>{g.debug("getHashFile",e);let o=s.createReadStream(a.resolve(process.cwd(),e)),t=r.createHash("md5");return t.setEncoding("hex"),new Promise((function(e,s){o.on("end",(function(){t.end(),e(t.read(),s)})),o.pipe(t)}))},g.getHashMultipleFiles=async e=>{g.debug("getHashMultipleFiles",e);let o="";for(var t=0;t<e.length;t++)o+=await E(a.resolve(process.cwd(),e[t]),"utf8");return o=o.replace(/\r\n/g,"\n"),r.createHash("md5").update(o).digest("hex")},g.getSignature=e=>{g.debug("getSignature");return r.createHmac("sha512","new JSON({user_info})").update(JSON.stringify(e)).digest("hex")},g.askForConsent=e=>{g.debug("askForConsent",e);var o=n.createInterface({input:process.stdin,output:process.stdout});return new Promise((function(t,s){console.log(b(`Los datos con los que se va a firmar la práctica son, email: ${e.email}, token: ${e.token}`)),o.question(m("¿Son correctos? (y/N): "),(function(e){"y"===e||"yes"===e?(console.log(b("El contenido de la práctica, así como los test que se le pasan van a ser firmados.")),console.log(b("Es importante que sepa que se van a enviar al servidor y en él se validará la firma y la autenticidad, así como se pasará un anticopia.")),o.question(m("¿Confirma que ha realizado usted mismo la práctica y desea enviarla al servidor para registrar la nota? (y/N):"),e=>{t("y"===e||"yes"===e,s),o.close()})):t(!1,s)}))}))},g.compress=async e=>{g.debug("compress",e);const o=c("zip",{zlib:{level:9}}),t=s.createWriteStream(a.resolve(process.cwd(),e));return new Promise((e,s)=>{o.glob("*",{ignore:["node_modules","tests","bin","README.md","LICENSE","*.zip"]}),o.glob("data/res.enc"),o.on("error",e=>s(e)),o.pipe(t),t.on("close",()=>{e()}),o.finalize()})},g.checkTestVersion=async(e,o)=>{g.debug("checkTestVersion",e,o);const t=new l;return[owner,repo]=e.split("/"),t.repos.getContents({owner:owner,repo:repo,path:o}).then(e=>{const o=Buffer.from(e.data.content,"base64").toString();return JSON.parse(o).version}).catch(e=>(g.debug(e),"*"))},g.encryptBufferWithRsaPublicKey=async(e,o)=>{g.debug("encryptBufferWithRsaPublicKey");var t=await E(a.resolve(process.cwd(),o),"utf8"),s=Buffer.from(e);return r.publicEncrypt({key:t,padding:r.constants.RSA_NO_PADDING},s).toString("base64")},g.en=(e,o)=>{g.debug("en");let t=r.createHash("sha256").update(o).digest("base64").substr(0,32);const s=r.randomBytes(16),n=r.createCipheriv("aes-256-ctr",t,s);let a=Buffer.from(e);return Buffer.concat([s,n.update(a),n.final()]).toString("hex")},g.de=(e,o)=>{g.debug("de");let t=Buffer.from(e,"hex");const s=t.slice(0,16);t=t.slice(16);let n=r.createHash("sha256").update(o).digest("base64").substr(0,32);const a=r.createDecipheriv("aes-256-ctr",n,s);return Buffer.concat([a.update(t),a.final()]).toString()},g.sendFile=async(e,o,t)=>{g.debug("sendFile",e,o),console.log("Enviando práctica al servidor...");const s={submission:{file:a.resolve(process.cwd(),o),filename:"submission.zip",content_type:"application/zip"}};try{const o=await u("post",e,s,{multipart:!0,accept:"application/json"});200===o.statusCode?(console.log(b(o.body||"Ok")),await g.cleanHistoryRecords(t)):(console.log(f("ERROR")),console.error(o.body||"Error"))}catch(e){console.error(e||"Error")}},g.execTests=e=>(g.debug("execTests",e),new Promise((o,s)=>{global.should=t(13).should(),global.exec=p.promisify(t(14).exec),global.Browser=t(15);let r={score:0,score_total:0};g.debug("Call new Mocha"),new d({timeout:6e4,reporter:function(){}}).addFile(a.resolve(process.cwd(),e)).run().on("suite",(function(e){console.log(y(e.title)+"\n")})).on("test",(function(e){console.log(h(`Test: ${e.title}`))})).on("pass",(function(e){r.score+=e.ctx.score,r.score_total+=e.ctx.score,console.log("\t"+v("Puntuación: ")+`${e.ctx.score}/${e.ctx.score}\n\t`+v("Observaciones: ")+`${e.ctx.msg_ok}`+"\n")})).on("fail",(function(e,o){e.title.indexOf('"after all" hook')<0&&e.title.indexOf('"before all" hook')<0?(r.score_total+=e.ctx.score,console.log("\t"+f("Puntuación: ")+`0/${e.ctx.score}\n\t`+f("Observaciones:")+`${e.ctx.msg_err}`+"\n")):console.error(f("Error Mocha: ")+o)})).on("end",(function(){o(r)}))})),g.initHistory=async()=>{g.debug("initHistory");let e=[],o={};const t=await R("package.json");return o.started=!0,o.datetime=t.mtime,e.push(o),e},g.saveHistoryRecord=async(e,o,t)=>{let s;if(g.debug("saveHistoryRecord",e,o),await g.checkFileExists(a.resolve(process.cwd(),t)))try{let e=await E(a.resolve(process.cwd(),t),"utf8"),o=g.de(e,"pubkey.pem");s=JSON.parse(o)}catch(e){console.log("ERROR Recuperable: ",f(e)),g.debug(e),s=await g.initHistory()}else s=await g.initHistory();let r={started:!1,datetime:new Date,score:e.score,score_total:e.score_total,version:o};s.push(r);let n=g.en(JSON.stringify(s,null,4),"pubkey.pem");return O(a.resolve(process.cwd(),t),n,"utf8").then(e=>Promise.resolve(s)).catch(e=>(console.log(f(e)),Promise.reject(e)))},g.cleanHistoryRecords=async e=>{if(g.debug("cleanHistoryRecords"),await g.checkFileExists(a.resolve(process.cwd(),e))){let o=await E(a.resolve(process.cwd(),e),"utf8"),t=g.de(o,"pubkey.pem"),s=[JSON.parse(t)[0]],r=g.en(JSON.stringify(s,null,4),"pubkey.pem");return O(a.resolve(process.cwd(),e),r,"utf8")}},e.exports=g},function(e,o){e.exports=require("crypto")},function(e,o){e.exports=require("object-hash")},function(e,o){e.exports=require("readline")},function(e,o){e.exports=require("archiver")},function(e,o){e.exports=require("@octokit/rest")},function(e,o){e.exports=require("needle")},function(e,o){e.exports=require("mocha")},function(e,o){e.exports=require("util")},function(e,o){e.exports=require("chai")},function(e,o){e.exports=require("child_process")},function(e,o){e.exports=require("zombie")}]);